// СКОПИРУЙТЕ ЭТОТ КОД В api/fortnite-proxy.ts

import type { VercelRequest, VercelResponse } from '@vercel/node';
import fetch from 'node-fetch';

// Имя переменной окружения для API-ключа
const FORTNITE_API_KEY_ENV_NAME = 'FORTNITE_TRACKER_API_KEY'; 

// Базовые URL для внешнего API
const FORTNITE_EXTERNAL_PROFILE_API_BASE_URL = 'https://api.tracker.gg/api/v2/fortnite/standard/profile/';

export default async function (request: VercelRequest, response: VercelResponse) {
  const { type, username, platform, region } = request.query;
  const apiKey = process.env[FORTNITE_API_KEY_ENV_NAME];

  if (!apiKey) {
    console.error('API key not configured for proxy.');
    return response.status(500).json({ error: 'API key for Fortnite Tracker is not configured in Vercel.' });
  }

  let externalApiUrl = '';
  const headers: Record<string, string> = {
    'TRN-Api-Key': apiKey, 
    'Content-Type': 'application/json',
  };

  try {
    if (type === 'profile' && username && platform) {
      const apiPlatform = platform === 'pc' || platform === 'console' || platform === 'mobile' ? 'epic' : platform;
      externalApiUrl = `${FORTNITE_EXTERNAL_PROFILE_API_BASE_URL}${apiPlatform}/${encodeURIComponent(String(username))}`;
    
    } else if (type === 'leaderboard') {
      // Это реальный URL для получения таблицы лидеров по победам
      externalApiUrl = 'https://api.tracker.gg/api/v2/fortnite/standard/leaderboards/all?type=stats&platform=all&board=Wins';
    
    } else if (type === 'powerranking' && username && platform && region) {
        console.warn('Power Ranking API endpoint is not implemented.');
        return response.status(400).json({ error: 'Power Ranking data is not supported.' });
    } else {
      return response.status(400).json({ error: 'Invalid API request type or missing parameters.' });
    }

    console.log('Proxying request to external API:', externalApiUrl);
    const apiResponse = await fetch(externalApiUrl, { headers });
    const data = await apiResponse.json();

    if (!apiResponse.ok) {
      console.error('External API returned an error:', apiResponse.status, data);
      return response.status(apiResponse.status).json({ 
        error: data.errors?.[0]?.message || data.message || `External API request failed`, 
      });
    }

    response.status(200).json(data);

  } catch (error) {
    console.error('Proxy internal error:', error);
    response.status(500).json({ error: 'Proxy server encountered an internal error.' });
  }
}