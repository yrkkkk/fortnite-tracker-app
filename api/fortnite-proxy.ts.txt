// api/fortnite-proxy.ts
import type { VercelRequest, VercelResponse } from '@vercel/node';
import fetch from 'node-fetch';

// Имя переменной окружения, которое вы будете использовать в Vercel для API-ключа
const FORTNITE_API_KEY_ENV_NAME = 'FORTNITE_TRACKER_API_KEY'; 

// Базовый URL для внешнего API Fortnite Tracker (Tracker.gg)
// Для профилей: https://api.tracker.gg/api/v2/fortnite/standard/profile/
const FORTNITE_EXTERNAL_PROFILE_API_BASE_URL = 'https://api.tracker.gg/api/v2/fortnite/standard/profile/';

export default async function (request: VercelRequest, response: VercelResponse) {
  // Извлекаем параметры запроса из URL, который пришел от вашего фронтенда
  const { type, username, platform, region } = request.query;

  // 1. Получаем API-ключ из переменной окружения Vercel
  const apiKey = process.env[FORTNITE_API_KEY_ENV_NAME];

  if (!apiKey) {
    console.error('API key not configured for proxy. Environment variable:', FORTNITE_API_KEY_ENV_NAME);
    return response.status(500).json({ error: 'API key for Fortnite Tracker is not configured. Please set the ' + FORTNITE_API_KEY_ENV_NAME + ' environment variable in Vercel.' });
  }

  let externalApiUrl = '';
  // 2. Определяем заголовки, включая API-ключ, который Tracker.gg ожидает как 'TRN-Api-Key'
  let headers: Record<string, string> = {
    'TRN-Api-Key': apiKey, 
    'Content-Type': 'application/json',
  };

  try {
    if (type === 'profile' && username && platform) {
      // Предполагаем, что 'platform' из фронтенда (pc, console) нужно преобразовать в 'epic' для tracker.gg
      const apiPlatform = platform === 'pc' || platform === 'console' || platform === 'mobile' ? 'epic' : platform;
      
      externalApiUrl = `${FORTNITE_EXTERNAL_PROFILE_API_BASE_URL}${apiPlatform}/${encodeURIComponent(String(username))}`;
      
    } else if (type === 'powerranking' && username && platform && region) {
        // !!! ВНИМАНИЕ: ЭТОТ ЭНДПОИНТ ДЛЯ POWER RANKING НЕ РЕАЛИЗОВАН В ЭТОМ ПРИМЕРЕ !!!
        // У Tracker.gg Power Ranking может быть свой отдельный API или быть доступен через другой путь.
        // Вам нужно будет уточнить конкретный URL для Power Ranking.
        console.warn('Power Ranking API endpoint not fully implemented in proxy or not supported by the current configuration.');
        return response.status(400).json({ error: 'Power Ranking data is not yet supported by this proxy configuration or missing proper external API URL.' });
    } else {
      return response.status(400).json({ error: 'Invalid API request type or missing parameters.' });
    }

    console.log('Proxying request to external API:', externalApiUrl);
    const apiResponse = await fetch(externalApiUrl, { headers });
    const data = await apiResponse.json();

    if (!apiResponse.ok) {
      console.error('External API returned an error:', apiResponse.status, data);
      return response.status(apiResponse.status).json({ 
        error: data.errors?.[0]?.message || data.message || `External API request failed with status ${apiResponse.status}`, 
        externalApiError: data 
      });
    }

    response.status(200).json(data);

  } catch (error) {
    console.error('Proxy internal error:', error);
    response.status(500).json({ error: 'Proxy server encountered an internal error.' });
  }
}